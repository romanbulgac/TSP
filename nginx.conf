worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json application/wasm;

    server {
        listen 80;
        server_name localhost;

        # Serve Blazor WebAssembly files
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            # WASM files need special handling
            location ~* \.wasm$ {
                add_header Content-Type application/wasm;
                add_header Cache-Control "public, max-age=31536000, immutable";
            }
            
            # Blazor framework files
            location ~* \.(dll|pdb)$ {
                add_header Content-Type application/octet-stream;
                add_header Cache-Control "public, max-age=31536000, immutable";
            }
            
            # Static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                add_header Cache-Control "public, max-age=31536000, immutable";
            }
        }

        # Proxy API calls to backend (if using separate containers)
        location /api/ {
            proxy_pass http://api:8080/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # SignalR Hub
        location /hubs/ {
            proxy_pass http://api:8080/hubs/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
